{"version":3,"sources":["components/item.jsx","components/profile.jsx","components/button.jsx","components/items.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","item","idItem","types","map","z","id","className","type","name","onClick","src","sprites","front_default","alt","Profile","profile","result","point","stats","stat","base_stat","weight","i","length","Math","floor","total","Button","props","button","Items","loding","items","useState","setProfile","x","App","setItem","setLoding","setButton","useEffect","a","arr","axios","data","results","url","fetch","push","fetchItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAiBeA,EAfF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAEdC,EAAQF,EAAKE,MAAMC,KAAI,SAACC,EAAIC,GAAS,OAAO,mBAAGC,UAAU,aAAb,SAAuCF,EAAEG,KAAKC,MAAdH,MAElF,OACE,sBAAKI,QAAS,kBAAMR,EAAOD,EAAKK,KAAKC,UAAU,OAA/C,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKI,IAAKV,EAAKW,QAAQC,cAAeC,IAAKb,EAAKK,GAAIC,UAAU,mBAEhE,oCAAON,EAAKQ,QACZ,qBAAKF,UAAU,QAAf,SAAwBJ,QCyCfY,EAnDC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,QAETb,EAAQa,EAAQb,MAAMC,KAAI,SAACC,EAAIC,GAAS,OAAO,sBAAMC,UAAU,eAAhB,SAA0CF,EAAEG,KAAKC,MAAbH,MAExFW,EAAU,EAULC,EAAQF,EAAQG,MAAMf,KAAI,SAACC,EAAEC,GAEjC,OAAO,sBAAKC,UAAU,cAAf,UACD,mBAAGA,UAAU,aAAb,SAA2BF,EAAEe,KAAKX,OAClC,mBAAGF,UAAU,iBAAb,SAAgCF,EAAEgB,cAFEf,MAM9C,OAEM,sBAAKC,UAAU,kBAAf,UACA,qBAAKA,UAAU,MAAf,SACK,qBAAMA,UAAU,eAAeI,IAAKK,EAAQJ,QAAQC,cAAeC,IAAKE,EAAQV,OAEhF,qBAAKC,UAAU,gBAAf,SACA,8BAAIS,EAAQP,KAAZ,MAAqBO,EAAQV,QAE7B,sBAAMC,UAAU,QAAhB,UACE,sBAAMA,UAAU,cAAhB,UACK,mBAAGA,UAAU,aAAb,mBACA,mBAAGA,UAAU,iBAAb,SAA+BJ,OAE7Be,EACD,sBAAKX,UAAU,cAAf,UACA,mBAAGA,UAAU,aAAb,oBACD,mBAAGA,UAAU,iBAAb,SAA+BS,EAAQM,YAEtC,sBAAKf,UAAU,cAAf,UACA,mBAAGA,UAAU,aAAb,mBACD,mBAAGA,UAAU,iBAAb,SArCN,WACV,IAAK,IAAIgB,EAAI,EAAGA,EAAKP,EAAQG,MAAMK,OAAQD,IACpCN,GAAmBD,EAAQG,MAAMI,GAAGF,UAG1C,OAAOI,KAAKC,OAAOT,EAASD,EAAQM,SAAWN,EAAQG,MAAMK,OAAS,IAgCxBG,eC9BpCC,EAXA,SAACC,GAEZ,OACI,qBAAKtB,UAAU,gBAAf,SACI,wBAAQG,QAASmB,EAAMC,OAAQvB,UAAU,SAAzC,0BCsBGwB,EAxBD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAQH,EAAa,EAAbA,OAAa,EACdI,qBADc,mBACrClB,EADqC,KAC5BmB,EAD4B,KAGtCjC,EAAS,SAACI,GACd6B,EAAW7B,IAIb,OAAO0B,EAAS,0CAAmB,sBAAKzB,UAAU,eAAf,UAEjC,sBAAKA,UAAU,gBAAf,UACG0B,EAAM7B,KAAI,SAAAgC,GAAO,OAAO,cAAC,EAAD,CAAMlC,OAAQA,EAAmBD,KAAMmC,GAAZA,EAAE9B,OAEvD,cAAC,EAAD,CAASwB,OAAQA,OAGlB,qBAAKvB,UAAU,UAAf,SACK0B,EAAM7B,KAAI,SAAAgC,GAAM,GAAGpB,IAAYoB,EAAE9B,GAAK,OAAO,cAAC,EAAD,CAASU,QAASoB,GAASA,EAAE9B,a,gBCuBpE+B,EAtCH,WAAO,IAAD,EACSH,mBAAS,IADlB,mBACTD,EADS,KACFK,EADE,OAEYJ,oBAAS,GAFrB,mBAETF,EAFS,KAEDO,EAFC,OAGYL,mBAAS,GAHrB,mBAGTJ,EAHS,KAGDU,EAHC,KA+BhB,OArBAC,qBAAU,YACQ,uCAAG,kCAAAC,EAAA,6DAEXC,EAAM,GAFK,SAIIC,IAAM,4CAAD,OAA6Cd,IAJtD,OAIXb,EAJW,OAMRM,EAAI,EANI,YAMDA,EAAIN,EAAO4B,KAAKC,QAAQtB,QANvB,iCAQGoB,IAAM3B,EAAO4B,KAAKC,QAAQvB,GAAGwB,KARhC,OAQXC,EARW,OAUfL,EAAIM,KAAKD,EAAMH,MAVA,QAM+BtB,IAN/B,uBAYjBe,EAAQK,GACRJ,GAAU,GAbO,4CAAH,qDAgBhBW,KAEC,CAACpB,IAGF,8BACE,cAAC,EAAD,CAAOG,MAAOA,EAAOD,OAAQA,EAAQF,OA5BxB,WACfU,EAAUV,EAAS,UCFRqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d30c11c.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Item = ({ item, idItem }) => {\r\n\r\n  const types = item.types.map((z , id) => { return <p className=\"item__type\"  key={id}  >{z.type.name}</p> })\r\n\r\n  return (\r\n    <div onClick={() => idItem(item.id)} className=\"item\">\r\n      <div className=\"img\">\r\n        <img src={item.sprites.front_default} alt={item.id} className=\"img__profile\"/>\r\n      </div>\r\n      <div> {item.name}</div>\r\n      <div className=\"types\">{types}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\"\r\n\r\nconst Profile = ({ profile  }) => {\r\n\r\n    const types = profile.types.map((z , id) => { return <span className=\"types__items\" key={id} >{z.type.name}</span> })\r\n\r\n let result  = 0\r\n\r\nconst total = () => {\r\n    for (let i = 0; i <  profile.stats.length; i++) {\r\n           result = result +  profile.stats[i].base_stat\r\n     }\r\n\r\n     return Math.floor((result + profile.weight) / (profile.stats.length + 1)) \r\n}\r\n   \r\n    const point = profile.stats.map((z,id) => {\r\n  \r\n      return <div className=\"point__item\"  key={id}>\r\n            <p className=\"type__name\">{z.stat.name}</p>    \r\n            <p className='types__profile' >{z.base_stat}</p> \r\n       </div>\r\n       })\r\n\r\n  return (\r\n \r\n        <div className=\"profile_pokemon\">\r\n        <div className=\"img\" >\r\n             <img  className=\"img__profile\" src={profile.sprites.front_default} alt={profile.id}/>\r\n             </div>\r\n             <div className=\"profile__name\">\r\n             <p>{profile.name} # {profile.id}</p>    \r\n             </div>\r\n             <div  className='point'>\r\n               <div  className=\"point__item\">\r\n                    <p className=\"type__name\">types</p>\r\n                    <p className=\"types__profile\">{types}</p>\r\n               </div>\r\n                     {point}\r\n                     <div className=\"point__item\">\r\n                     <p className=\"type__name\">weight</p>\r\n                    <p className=\"types__profile\">{profile.weight}</p>\r\n                     </div>\r\n                     <div className=\"point__item\">\r\n                     <p className=\"type__name\">total</p>\r\n                    <p className=\"types__profile\">{total()}</p>\r\n                     </div>\r\n             </div>\r\n        </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Profile;   \r\n","import React from \"react\"\r\nimport \"../index.css\"\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <div className=\"button__block\">\r\n            <button onClick={props.button} className=\"button\">\r\n               LODE MORE\r\n             </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\"\r\nimport Item from './item'\r\nimport Profile from './profile'\r\nimport \"../index.css\"\r\nimport Button from './button.jsx'\r\n\r\nconst Items = ({ loding, items , button }) => {\r\n  const [profile, setProfile] = useState()\r\n\r\n  const idItem = (id) => {\r\n    setProfile(id)\r\n  }\r\n\r\n\r\n  return loding ? <p>loding...</p> : <div className=\"items__block\">\r\n\r\n    <div className=\"items__button\">\r\n      {items.map(x => { return <Item idItem={idItem} key={x.id} item={x} /> })}\r\n\r\n     <Button  button={button}/>\r\n    </div>\r\n\r\n    <div className=\"profile\">\r\n      {  items.map(x => {if(profile === x.id){ return <Profile profile={x}  key={x.id} />}})}\r\n    </div>\r\n    \r\n  </div>\r\n\r\n}\r\n\r\nexport default Items;\r\n","import React, { useEffect, useState } from \"react\"\nimport Items from \"./components/items\"\nimport Button from \"./components/button\"\nimport axios from 'axios'\nimport \"./index.css\"\n\n\n\nconst App = () => {\n  const [items, setItem] = useState([])\n  const [loding, setLoding] = useState(true)\n  const [button, setButton] = useState(9)\n\n  const lodeMore = () => {\n    setButton(button + 12)\n  }\n\n\n  useEffect(() => {\n    const fetchItems = async () => {\n\n      const arr = []\n\n      const result = await axios(`https://pokeapi.co/api/v2/pokemon/?limit=${button}`)\n\n      for (let i = 0; i < result.data.results.length; i++) {\n\n        let fetch = await axios(result.data.results[i].url)\n\n        arr.push(fetch.data)\n      }\n      setItem(arr)\n      setLoding(false)\n    }\n\n    fetchItems()\n\n  }, [button])\n\n  return (\n    <div>\n      <Items items={items} loding={loding} button={lodeMore}  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}